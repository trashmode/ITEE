{"ast":null,"code":"var _jsxFileName = \"/Users/emilydang/Desktop/ITEE/my-app/src/Components/game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialBoard = Array(9).fill(null);\nconst TicTacToe = () => {\n  _s();\n  const [board, setBoard] = useState(initialBoard);\n  const [currentPlayer, setCurrentPlayer] = useState('X');\n  const [winner, setWinner] = useState(null);\n  const handleCellClick = index => {\n    if (board[index] || winner) {\n      return;\n    }\n    const updatedBoard = [...board];\n    updatedBoard[index] = currentPlayer;\n    setBoard(updatedBoard);\n    checkWinner(updatedBoard, currentPlayer);\n    setCurrentPlayer(currentPlayer === 'X' ? 'O' : 'X');\n  };\n  const checkWinner = (board, player) => {\n    const winningCombinations = [[0, 1, 2], [3, 4, 5], [6, 7, 8],\n    // Rows\n    [0, 3, 6], [1, 4, 7], [2, 5, 8],\n    // Columns\n    [0, 4, 8], [2, 4, 6] // Diagonals\n    ];\n\n    for (const combination of winningCombinations) {\n      const [a, b, c] = combination;\n      if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n        setWinner(player);\n        return;\n      }\n    }\n    if (board.every(cell => cell !== null)) {\n      setWinner('Draw');\n    }\n  };\n  const renderCell = index => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cell\",\n    onClick: () => handleCellClick(index),\n    children: board[index]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n  const renderStatus = () => {\n    if (winner === 'Draw') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: \"It's a draw!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }, this);\n    }\n    if (winner) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: [\"Player \", winner, \" wins!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: [\"Current Player: \", currentPlayer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tic-tac-toe\",\n    children: [renderStatus(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((_, index) => renderCell(index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset-button\",\n      onClick: () => setBoard(initialBoard),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(TicTacToe, \"dNSDRE0AELdZFHuHQfNKGkkK9Z0=\");\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","initialBoard","Array","fill","TicTacToe","_s","board","setBoard","currentPlayer","setCurrentPlayer","winner","setWinner","handleCellClick","index","updatedBoard","checkWinner","player","winningCombinations","combination","a","b","c","every","cell","renderCell","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","renderStatus","map","_","_c","$RefreshReg$"],"sources":["/Users/emilydang/Desktop/ITEE/my-app/src/Components/game.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ntype Player = 'X' | 'O' | null;\n\nconst initialBoard: Player[] = Array(9).fill(null);\n\nconst TicTacToe: React.FC = () => {\n  const [board, setBoard] = useState<Player[]>(initialBoard);\n  const [currentPlayer, setCurrentPlayer] = useState<Player>('X');\n  const [winner, setWinner] = useState<Player | 'Draw' | null>(null);\n\n  const handleCellClick = (index: number) => {\n    if (board[index] || winner) {\n      return;\n    }\n\n    const updatedBoard = [...board];\n    updatedBoard[index] = currentPlayer;\n    setBoard(updatedBoard);\n\n    checkWinner(updatedBoard, currentPlayer);\n    setCurrentPlayer(currentPlayer === 'X' ? 'O' : 'X');\n  };\n\n  const checkWinner = (board: Player[], player: Player) => {\n    const winningCombinations = [\n      [0, 1, 2], [3, 4, 5], [6, 7, 8], // Rows\n      [0, 3, 6], [1, 4, 7], [2, 5, 8], // Columns\n      [0, 4, 8], [2, 4, 6] // Diagonals\n    ];\n\n    for (const combination of winningCombinations) {\n      const [a, b, c] = combination;\n      if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n        setWinner(player);\n        return;\n      }\n    }\n\n    if (board.every(cell => cell !== null)) {\n      setWinner('Draw');\n    }\n  };\n\n  const renderCell = (index: number) => (\n    <div\n      className=\"cell\"\n      onClick={() => handleCellClick(index)}\n    >\n      {board[index]}\n    </div>\n  );\n\n  const renderStatus = () => {\n    if (winner === 'Draw') {\n      return <div className=\"status\">It's a draw!</div>;\n    }\n    if (winner) {\n      return <div className=\"status\">Player {winner} wins!</div>;\n    }\n    return <div className=\"status\">Current Player: {currentPlayer}</div>;\n  };\n\n  return (\n    <div className=\"tic-tac-toe\">\n      {renderStatus()}\n      <div className=\"board\">\n        {board.map((_, index) => renderCell(index))}\n      </div>\n      <button className=\"reset-button\" onClick={() => setBoard(initialBoard)}>\n        Reset\n      </button>\n    </div>\n  );\n};\n\nexport default TicTacToe;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}